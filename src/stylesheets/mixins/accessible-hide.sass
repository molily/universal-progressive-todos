// Hide and show content accessibly. The content is visually hidden, but
// screen readers and other assistive technology should still read it.
// http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin accessible-hide
  position: absolute
  // Without any top/right/bottom/left declaration, the element would be
  // positioned at its position in the normal flow. This may cause scrollbars
  // so we move it to top/left position of the containing block.
  // For screen readers, the content is still at the right place.
  left: 0
  top: 0
  height: 1px
  width: 1px
  min-width: 0
  min-height: 0
  overflow: hidden
  // Legacy syntax for IE6 and IE7
  clip: rect(1px 1px 1px 1px)
  clip: rect(1px, 1px, 1px, 1px)
  padding: 0

// The opposite of accessible-hide.
// Makes an element visible again that has the styles above.
@mixin accessible-show
  position: static
  left: auto
  top: auto
  width: auto
  height: auto
  overflow: visible
  clip: auto
